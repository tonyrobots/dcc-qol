---
description: 
globs: 
alwaysApply: false
---
# CSS Structure Guide for DCC and DCC-QoL

This document outlines the general structure and relationship between the DCC system's CSS and the DCC-QoL module's CSS.

## DCC System CSS: `dcc.css`

*   **File**: `[dcc.css](mdc:dcc-qol/dcc/styles/dcc.css)`
*   **Purpose**: Provides the base styling for the DCC (Dungeon Crawl Classics) system in Foundry VTT.
*   **Scope**: Styles core DCC elements, character sheets, item sheets, and system-generated chat messages.
*   **Key Characteristics**:
    *   Contains foundational styles for dice rolls (`.dice-roll`, `.dice-formula`, `.dice-total`), critical hit/fumble tables, and other DCC-specific UI components.
    *   Styles are generally applied globally or scoped to specific HTML templates used by the DCC system.

## DCC-QoL Module CSS: `dcc-qol.css`

*   **File**: `[dcc-qol.css](mdc:dcc-qol/dcc-qol/styles/dcc-qol.css)`
*   **Purpose**: Enhances and overrides styles from `dcc.css` and Foundry's base CSS to provide a customized "Quality of Life" experience, particularly for chat messages.
*   **Scope**: Primarily targets chat messages generated by the DCC-QoL module, but also includes global overrides and styles for system messages (conditionally applied via settings).
*   **Key Characteristics**:
    *   **Primary Scoping Class**: Most QoL chat card styles are scoped under `.dccqol.chat-card`. This ensures that QoL styles are applied specifically to QoL-generated cards.
    *   **Font**: Uses "Signika" as the primary font for its chat cards.
    *   **System Message Styling**: Introduces `.dccqol-system-card-font` which is dynamically added to non-QoL chat messages if the `useQoLAttackCard` (or similar) setting is enabled. This class is used to apply the "Signika" font family and potentially other QoL base styles to system messages for consistency.
    *   **Global Dice Styling**: The styles for `.dice-roll`, `.dice-formula`, and `.dice-total` within `dcc-qol.css` are intended to be global, affecting all dice roll presentations in chat messages, regardless of origin (system or QoL module), to ensure a consistent appearance.
    *   **Utility Classes**:
        *   `.centered`: Used for `text-align: center;`.
        *   `.status-success`, `.status-failure`, `.status-warning`: Semantic classes for applying consistent coloring for success, failure, and warning messages/text. These are intended to replace direct color styling in HTML/JS.
    *   **Specific Component Styling**: Contains detailed styles for elements within QoL chat cards, such as headers, buttons, footers, deed die results, fumble/crit displays, and applied damage sections. Many of these are scoped under `.dccqol.chat-card`.
    *   **Overrides**: `dcc-qol.css` will often override styles from `dcc.css` by using more specific selectors or, occasionally, `!important` (though the latter is used sparingly).

## Interaction and Best Practices

*   When modifying or adding CSS for the DCC-QoL module:
    *   First, check `[dcc.css](mdc:dcc-qol/dcc/styles/dcc.css)` to understand the base styling of the element in question.
    *   If overriding system styles for QoL cards, ensure selectors are specific enough, typically by including `.dccqol.chat-card`.
    *   For styles intended to apply to *both* QoL cards and system cards (when the setting is active), consider if a global approach (like the dice styles) or a dual-selector approach (e.g., `.dccqol.chat-card .my-element, .dccqol-system-card-font .my-element`) is more appropriate.
    *   Utilize existing utility classes (`.centered`, `.status-success`, etc.) where possible before writing new specific styles.
    *   Refer to the JavaScript files in `[dcc-qol/scripts/hooks/](mdc:dcc-qol/dcc-qol/scripts/hooks)` (especially `chatMessageHooks.js` and `listeners.js`) to see how classes like `.dccqol-system-card-font` are applied.
    *   The main QoL attack roll card template is `[attackroll-card.html](mdc:dcc-qol/dcc-qol/templates/attackroll-card.html)`.
